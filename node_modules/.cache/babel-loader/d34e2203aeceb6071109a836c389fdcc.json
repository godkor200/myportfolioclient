{"ast":null,"code":"var _jsxFileName = \"/Users/yubyeong-gug/Desktop/web/im-sprint-personal-portfolio/client/src/Components/Resume/index.js\";\nimport React, { Component } from \"react\";\nimport { Containner, FormWrap, Icon, FormContent, Form, FormH1, FormLabel, FormInput, FormButton, Text, SubmitText } from \"./ReusmeElements\";\nimport axios from \"axios\";\n\nclass Reusme extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleName = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.formSubmit = e => {\n      e.preventDefault();\n      let data = {\n        email: this.state.email,\n        name: this.state.name\n      };\n      axios.post(\"/api/forma\", data).then(() => {\n        this.setState({\n          msg: true\n        }, this.resetForm());\n      }).catch(() => console.log(\"msg not sent\"));\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        name: \"\",\n        email: \"\"\n      });\n      setTimeout(() => {\n        this.setState({\n          msg: false\n        });\n      }, 3000);\n    };\n\n    this.state = {\n      email: \"\",\n      name: \"\",\n      msg: false\n    };\n  } //handle input\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Containner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormWrap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Googi\"), /*#__PURE__*/React.createElement(FormContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.formSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormH1, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"E-Mail\\uC640 \\uAC04\\uB2E8\\uD55C \\uC815\\uBCF4 \\uC785\\uB825\\uD574\\uC8FC\\uC2DC\\uBA74 \\uBCF4\\uB0B4\\uB4DC\\uB9AC\\uB3C4\\uB85D \\uD558\\uACA0\\uC2B5\\uB2C8\\uB2E4. \\uAC10\\uC0AC\\uD569\\uB2C8\\uB2E4.\"), /*#__PURE__*/React.createElement(FormLabel, {\n      htmlFor: \"for\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n      value: this.state.email,\n      onChange: e => this.handleEmail(e),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FormLabel, {\n      htmlFor: \"for\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"\\uC131\\uD568 \\uBC0F \\uC18C\\uC18D\"), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"name\",\n      name: \"name\",\n      placeholder: \"\\uC131\\uD568\\uC774\\uB098 \\uC18C\\uC18D\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n      value: this.state.name,\n      onChange: e => this.handleName(e),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FormButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uCD9C\"), /*#__PURE__*/React.createElement(SubmitText, {\n      msg: this.state.msg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uCD9C \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"))), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Copyright \\xA9 2020 Googi All Rights Reserved.\")));\n  }\n\n}\n\nexport default Reusme;","map":{"version":3,"sources":["/Users/yubyeong-gug/Desktop/web/im-sprint-personal-portfolio/client/src/Components/Resume/index.js"],"names":["React","Component","Containner","FormWrap","Icon","FormContent","Form","FormH1","FormLabel","FormInput","FormButton","Text","SubmitText","axios","Reusme","constructor","props","handleName","e","setState","name","target","value","handleEmail","email","formSubmit","preventDefault","data","state","post","then","msg","resetForm","catch","console","log","setTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,MANF,EAOEC,SAPF,EAQEC,SARF,EASEC,UATF,EAUEC,IAVF,EAWEC,UAXF,QAYO,kBAZP;AAcA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBb,SAArB,CAA+B;AAC7Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,UATmB,GASLC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAjB,OAAd;AACD,KAXkB;;AAAA,SAYnBC,WAZmB,GAYJL,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AAAEK,QAAAA,KAAK,EAAEN,CAAC,CAACG,MAAF,CAASC;AAAlB,OAAd;AACD,KAdkB;;AAAA,SAkBnBG,UAlBmB,GAkBLP,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACQ,cAAF;AACA,UAAIC,IAAI,GAAG;AAAEH,QAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,KAApB;AAA2BJ,QAAAA,IAAI,EAAE,KAAKQ,KAAL,CAAWR;AAA5C,OAAX;AACAP,MAAAA,KAAK,CACFgB,IADH,CACQ,YADR,EACsBF,IADtB,EAEGG,IAFH,CAEQ,MAAM;AACV,aAAKX,QAAL,CAAc;AAAEY,UAAAA,GAAG,EAAE;AAAP,SAAd,EAA6B,KAAKC,SAAL,EAA7B;AACD,OAJH,EAKGC,KALH,CAKS,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CALf;AAMD,KA3BkB;;AAAA,SA8BnBH,SA9BmB,GA8BP,MAAM;AAChB,WAAKb,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYI,QAAAA,KAAK,EAAE;AAAnB,OAAd;AACAY,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKjB,QAAL,CAAc;AAAEY,UAAAA,GAAG,EAAE;AAAP,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAnCkB;;AAEjB,SAAKH,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXJ,MAAAA,IAAI,EAAE,EAFK;AAGXW,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD,GAR4B,CAS7B;;;AA6BAM,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKZ,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gMADF,eAKE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,gEAHd;AAIE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWJ,KAJpB;AAKE,MAAA,QAAQ,EAAGN,CAAD,IAAO,KAAKK,WAAL,CAAiBL,CAAjB,CALnB;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAcE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAdF,eAeE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,mFAHd;AAIE,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWR,IAJpB;AAKE,MAAA,QAAQ,EAAGF,CAAD,IAAO,KAAKD,UAAL,CAAgBC,CAAhB,CALnB;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAuBE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBF,eAwBE,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE,KAAKU,KAAL,CAAWG,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAxBF,CADF,CAFF,eA8BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDA9BF,CADF,CADF;AAoCD;;AA3E4B;;AA6E/B,eAAejB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Containner,\n  FormWrap,\n  Icon,\n  FormContent,\n  Form,\n  FormH1,\n  FormLabel,\n  FormInput,\n  FormButton,\n  Text,\n  SubmitText,\n} from \"./ReusmeElements\";\n\nimport axios from \"axios\";\n\nclass Reusme extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      name: \"\",\n      msg: false,\n    };\n  }\n  //handle input\n  handleName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  handleEmail = (e) => {\n    this.setState({ email: e.target.value });\n  };\n\n  //end of handle inputs\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    let data = { email: this.state.email, name: this.state.name };\n    axios\n      .post(\"/api/forma\", data)\n      .then(() => {\n        this.setState({ msg: true }, this.resetForm());\n      })\n      .catch(() => console.log(\"msg not sent\"));\n  };\n  //for resting initial data\n\n  resetForm = () => {\n    this.setState({ name: \"\", email: \"\" });\n    setTimeout(() => {\n      this.setState({ msg: false });\n    }, 3000);\n  };\n\n  render() {\n    return (\n      <Containner>\n        <FormWrap>\n          <Icon to=\"/\">Googi</Icon>\n          <FormContent>\n            <Form onSubmit={this.formSubmit}>\n              <FormH1>\n                E-Mail와 간단한 정보 입력해주시면 보내드리도록 하겠습니다.\n                감사합니다.\n              </FormH1>\n              <FormLabel htmlFor=\"for\">Email</FormLabel>\n              <FormInput\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"이메일을 입력해주세요.\"\n                value={this.state.email}\n                onChange={(e) => this.handleEmail(e)}\n                required\n              />\n              <FormLabel htmlFor=\"for\">성함 및 소속</FormLabel>\n              <FormInput\n                type=\"name\"\n                name=\"name\"\n                placeholder=\"성함이나 소속을 입력해주세요.\"\n                value={this.state.name}\n                onChange={(e) => this.handleName(e)}\n                required\n              />\n              <FormButton type=\"submit\">제출</FormButton>\n              <SubmitText msg={this.state.msg}>제출 되었습니다.</SubmitText>\n            </Form>\n          </FormContent>\n          <Text>Copyright © 2020 Googi All Rights Reserved.</Text>\n        </FormWrap>\n      </Containner>\n    );\n  }\n}\nexport default Reusme;\n"]},"metadata":{},"sourceType":"module"}